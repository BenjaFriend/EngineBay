language: cpp
os: linux
dist: xenial
sudo: required

matrix:
  include:
  #- os: windows


  # GCC 9
  - addons: &gcc9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - pkg-config
        - ninja-build
        - cmake
        - gcc-9
        - g++-9
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-9
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    before_install:
    - sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90

# Clang 8
  - addons: &clang8
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-8
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - pkg-config
        - ninja-build
        - cmake
        - g++-8
        - clang-8
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libopenal-dev
    language: cpp
    compiler: clang
    env:
    - COMPILER=clang++-8
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    before_install:
    - sudo apt-get update -qq

# # Clang 10
#   - os: linux
#     dist: xenial
#     sudo: required
#     addons: &clang10
#       apt:
#         sources:
#         - ubuntu-toolchain-r-test
#         - llvm-toolchain-xenial-10
#         - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
#           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
#         packages:
#         - pkg-config
#         - ninja-build
#         - cmake
#         - clang-10
#         - xorg-dev
#         - libglu1-mesa-dev
#         - libvulkan-dev
#         - libopenal-dev    
#     compiler: clang
#     env:
#     - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
#     - GSL_CXX_STANDARD=17
#     - BUILD_TYPE=Release
#     - BUILD_SHARED=ON
#     before_install:
#     - sudo apt-get update -qq
#     - eval "${MATRIX_EVAL}"

script:
- git submodule update --init --recursive
- mkdir Build && cd Build
- cmake .. -GNinja -DCMAKE_BUILD_TYPE=$BUILD_TYPE
- ninja