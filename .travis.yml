
# Global travis settings that each linux build needs
language: cpp
os: linux
dist: xenial

jobs:
  include:
  #- os: windows

###########################################
## GCC

  # GCC 9 Shipping
  - name: GCC 9 Shipping Build
    addons: &gcc9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-9
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: gcc
    env:
    - COMPILER=g++-9
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    - SET_SHIPPING=ON
    before_install:
    - sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90

  # GCC 9 Release
  - name: GCC 9 Release Build
    addons: &gcc9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-9
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: gcc
    env:
    - COMPILER=g++-9
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    - SET_SHIPPING=OFF
    before_install:
    - sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90

  # GCC 9 Debug
  - name: GCC 9 Debug Build
    addons: &gcc9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gcc-9
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: gcc
    env:
    - COMPILER=g++-9
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Debug
    - BUILD_SHARED=ON
    - SET_SHIPPING=OFF
    before_install:
    - sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90

###########################################
## Clang

# Clang 10 Shipping Build
  - name: Clang 10 Shipping Build
    addons: &clang10
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-10
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-10
        - gcc-9   # Need gcc for std::optional
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: clang
    env:
    - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    - SET_SHIPPING=ON
    before_install:
    - eval "${MATRIX_EVAL}"
    - sudo apt-get update -qq

# Clang 10 Release Build
  - name: Clang 10 Release Build
    addons: &clang10
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-10
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-10
        - gcc-9   # Need gcc for std::optional
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: clang
    env:
    - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    - BUILD_SHARED=ON
    - SET_SHIPPING=OFF
    before_install:
    - eval "${MATRIX_EVAL}"
    - sudo apt-get update -qq

# Clang 10 Debug Build
  - name: Clang 10 Debug Build
    addons: &clang10
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-10
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-10
        - gcc-9   # Need gcc for std::optional
        - g++-9
        - pkg-config
        - ninja-build
        - cmake
        - xorg-dev
        - libglu1-mesa-dev
        - libvulkan-dev
        - libglfw3-dev
        - libwayland-dev
        - libx11-dev
    compiler: clang
    env:
    - MATRIX_EVAL="CC=clang-10 && CXX=clang++-10"
    - GSL_CXX_STANDARD=17
    - BUILD_TYPE=Debug
    - BUILD_SHARED=ON
    - SET_SHIPPING=OFF
    before_install:
    - eval "${MATRIX_EVAL}"
    - sudo apt-get update -qq

###########################################
## Build Steps

# Building Engine, Tests, and Sandbox
script:
- git submodule update --init --recursive
- mkdir Build && cd Build
- cmake .. -GNinja -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEFINE_SHIPPING=$SET_SHIPPING
- ninja