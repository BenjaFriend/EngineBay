.TH "Fling::Singleton< T >" 3 "Fri Jul 19 2019" "Version 0.00.1" "Fling Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Fling::Singleton< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Singleton\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBInit\fP ()"
.br
.ti -1c
.RI "virtual void \fBShutdown\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static T & \fBGet\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSingleton\fP ()=default"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T> \fBFling::Singleton\fP< T >::\fBSingleton\fP ()\fC [explicit]\fP, \fC [protected]\fP, \fC [default]\fP"
Every singleton must have a default constructor so that explicit creation and destruction of them is maintained\&. Use Init and Shutdown to handle initializing of singletons\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > T & \fBFling::Singleton\fP< T >::Get ()\fC [static]\fP"

.SS "template<class T> virtual void \fBFling::Singleton\fP< T >::Init ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBFling::Renderer\fP, \fBFling::Logger\fP, \fBFling::Timing\fP, \fBFling::FlingConfig\fP, and \fBFling::ResourceManager\fP\&.
.SS "template<class T> virtual void \fBFling::Singleton\fP< T >::Shutdown ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBFling::Renderer\fP, \fBFling::FlingConfig\fP, and \fBFling::ResourceManager\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Fling Engine from the source code\&.
