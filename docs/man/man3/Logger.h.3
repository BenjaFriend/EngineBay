.TH "FlingEngine/Utils/inc/Logger.h" 3 "Fri Jul 19 2019" "Version 0.00.1" "Fling Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FlingEngine/Utils/inc/Logger.h
.SH SYNOPSIS
.br
.PP
\fC#include 'Singleton\&.hpp'\fP
.br
\fC#include 'spdlog/spdlog\&.h'\fP
.br
\fC#include 'spdlog/sinks/stdout_sinks\&.h'\fP
.br
\fC#include 'spdlog/sinks/stdout_color_sinks\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFling::Logger\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBFling\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSPDLOG_TRACE_ON\fP"
.br
.ti -1c
.RI "#define \fBSPDLOG_DEBUG_ON\fP"
.br
.ti -1c
.RI "#define \fBF_LOG_TRACE\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBF_LOG_WARN\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBF_LOG_ERROR\fP(\&.\&.\&.)"
.br
.ti -1c
.RI "#define \fBF_LOG_FATAL\fP(\&.\&.\&.)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define F_LOG_ERROR( \&.\&.\&.)"

.SS "#define F_LOG_FATAL( \&.\&.\&.)"
\fBValue:\fP
.PP
.nf
Logger::GetCurrentConsole()->error( __VA_ARGS__ ); \
                               throw std::runtime_error( __VA_ARGS__ )
.fi
Log a message to the error console AND throw a runtime exception\&. Only use for fatal asserts! Left in in release builds! 
.SS "#define F_LOG_TRACE( \&.\&.\&.)"

.SS "#define F_LOG_WARN( \&.\&.\&.)"

.SS "#define SPDLOG_DEBUG_ON"

.SS "#define SPDLOG_TRACE_ON"

.SH "Author"
.PP 
Generated automatically by Doxygen for Fling Engine from the source code\&.
